{"ast":null,"code":"var _jsxFileName = \"/Users/andrej/Desktop/Employee/client/src/context/alert/AlertState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { AlertContext } from './alertContext';\nimport { alertReducer } from './alertReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AlertState = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(alertReducer, {\n    visible: false\n  });\n\n  const show = function (text) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'warning';\n    dispatch({\n      type: SHOW_ALERT,\n      payload: {\n        text,\n        type\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    values: children,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AlertState, \"AKJPOyb5y6hC2C6WfWcC0Ca2zzA=\");\n\n_c = AlertState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertState\");","map":{"version":3,"sources":["/Users/andrej/Desktop/Employee/client/src/context/alert/AlertState.js"],"names":["React","useReducer","AlertContext","alertReducer","AlertState","children","state","dispatch","visible","show","text","type","SHOW_ALERT","payload"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;;AAGA,OAAO,MAAMC,UAAU,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,UAAU,CAACE,YAAD,EAAe;AAACK,IAAAA,OAAO,EAAE;AAAV,GAAf,CAApC;;AAEA,QAAMC,IAAI,GAAG,UAACC,IAAD,EAA4B;AAAA,QAArBC,IAAqB,uEAAd,SAAc;AACrCJ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAGC,UADF;AAELC,MAAAA,OAAO,EAAG;AAACH,QAAAA,IAAD;AAAOC,QAAAA;AAAP;AAFL,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,MAAM,EAAEN,QAA/B;AAAA,cACKA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhBM;;GAAMD,U;;KAAAA,U","sourcesContent":["import React, { useReducer } from 'react';\nimport { AlertContext } from './alertContext';\nimport {alertReducer} from './alertReducer'\n\n\nexport const AlertState = ({children}) => {\n\n    const [state, dispatch] = useReducer(alertReducer, {visible: false})\n\n    const show = (text, type = 'warning') => {\n        dispatch({\n            type : SHOW_ALERT,\n            payload : {text, type}\n        })\n    }\n\n    return (\n        <AlertContext.Provider values={children}>\n            {children}\n        </AlertContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}