{"ast":null,"code":"var _jsxFileName = \"/Users/andrej/Desktop/Employee/client/src/components/employees/Employees.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Employees = data => {\n  const token = JSON.parse(localStorage.getItem('UserInfo')).token;\n\n  const removeEmployeeItem = async id => {\n    const res = await fetch(`http://localhost:8000/api/employees/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(res => res.json());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-10 col-sm-10 col-md-10 col-lg-9 mx-auto mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.data.length ? data.data.map(employeer => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"alignment\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"row\",\n            children: employeer.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employeer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employeer.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employeer.bio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-sm btn-danger\",\n              onClick: removeEmployeeItem,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, employeer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"There are no employees yet!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/Users/andrej/Desktop/Employee/client/src/components/employees/Employees.js"],"names":["React","useContext","useEffect","Employees","data","token","JSON","parse","localStorage","getItem","removeEmployeeItem","id","res","fetch","method","headers","then","json","length","map","employeer","name","email","bio"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;;AAEA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU;AAE/B,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CJ,KAA3D;;AAEA,QAAMK,kBAAkB,GAAG,MAAOC,EAAP,IAAc;AACrC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,uCAAsCF,EAAG,EAA3C,EACnB;AACIG,MAAAA,MAAM,EAAE,QADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAW,kBAFN;AAGL,yBAAmB,SAAQV,KAAM;AAH5B;AAFb,KADmB,CAAL,CAUjBW,IAViB,CAUZJ,GAAG,IAAIA,GAAG,CAACK,IAAJ,EAVK,CAAlB;AAWH,GAZD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,kDAAf;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,kBACMb,IAAI,CAACA,IAAL,CAAUc,MAAV,GAAmBd,IAAI,CAACA,IAAL,CAAUe,GAAV,CAAcC,SAAS,iBACxC;AAAuB,UAAA,SAAS,EAAC,WAAjC;AAAA,kCACI;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA,sBAAiBA,SAAS,CAACT;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAKS,SAAS,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sBAAKD,SAAS,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA,sBAAKF,SAAS,CAACG;AAAf;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA,mCACI;AACI,cAAA,IAAI,EAAC,QADT;AAEI,cAAA,SAAS,EAAC,uBAFd;AAGI,cAAA,OAAO,EAAEb,kBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA,WAASU,SAAS,CAACT,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADiB,CAAnB,gBAgBE;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAjBR;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CA3DM;KAAMR,S","sourcesContent":["import React, {useContext, useEffect} from 'react';\n\nexport const Employees = (data) => {\n\n    const token = JSON.parse(localStorage.getItem('UserInfo')).token\n\n    const removeEmployeeItem = async (id) => {\n        const res = await fetch(`http://localhost:8000/api/employees/${id}`, \n            {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept' : 'application/json',\n                    'Authorization' : `Token ${token}`\n                },\n            }\n        )\n        .then(res => res.json())\n    }\n\n    return (\n        <div className=\"col-10 col-sm-10 col-md-10 col-lg-9 mx-auto mt-5\">\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">ID</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Message</th>\n                        <th scope=\"col\">Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { data.data.length ? data.data.map(employeer => \n                        <tr key={employeer.id} className=\"alignment\">\n                            <th scope=\"row\">{employeer.id}</th>\n                            <td>{employeer.name}</td>\n                            <td>{employeer.email}</td>\n                            <td>{employeer.bio}</td>\n                            <td>\n                                <button \n                                    type=\"button\"\n                                    className=\"btn btn-sm btn-danger\"\n                                    onClick={removeEmployeeItem}\n                                >\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ) : <tr>\n                            <th>There are no employees yet!</th>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                            <td></td>\n                        </tr>\n                    }\n                </tbody>\n            </table>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}