{"ast":null,"code":"var _jsxFileName = \"/Users/andrej/Desktop/Employee/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Header } from './components/layout/Header';\nimport { Form } from './components/employees/Form';\nimport { Employees } from './components/employees/Employees';\nimport { Alert } from './components/employees/Alert';\nimport { AlertState } from './context/alert/AlertState';\nimport { SignUp } from './pages/SignUp';\nimport { SignIn } from './pages/SignIn';\nimport { Start } from './components/layout/Start';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport './css/Custom.css';\nimport AuthContext from './context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isAuthentication, setIsAuthentication] = useState(false);\n  const [data, setData] = useState([]);\n  const token = JSON.parse(localStorage.getItem('UserInfo')).token;\n\n  const updateData = value => {\n    setData([...data, value]);\n  };\n\n  const updateIsAuthentication = isAuth => {\n    setIsAuthentication(isAuth);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('UserInfo')) {\n      setIsAuthentication(true);\n    }\n\n    const res = fetch('http://localhost:8000/api/employees/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': `Token ${token}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(fetchedData => {\n      setData(fetchedData);\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: isAuthentication,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(AlertState, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            children: isAuthentication ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Header, {\n                updateIsAuthentication: updateIsAuthentication\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                updateData: updateData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Employees, {\n                data: data\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Start, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            exact: true,\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              updateIsAuthentication: updateIsAuthentication\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            exact: true,\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              updateIsAuthentication: updateIsAuthentication\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SignIn, {\n              updateIsAuthentication: updateIsAuthentication\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TigtCMnUoCGGbBpKCYdihmfDDOY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/andrej/Desktop/Employee/client/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Header","Form","Employees","Alert","AlertState","SignUp","SignIn","Start","AuthContext","App","isAuthentication","setIsAuthentication","data","setData","token","JSON","parse","localStorage","getItem","updateData","value","updateIsAuthentication","isAuth","res","fetch","method","headers","then","response","json","fetchedData"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport {Header} from './components/layout/Header'\nimport {Form} from './components/employees/Form'\nimport {Employees} from './components/employees/Employees'\nimport {Alert} from './components/employees/Alert'\nimport { AlertState } from './context/alert/AlertState'\nimport {SignUp} from './pages/SignUp'\nimport {SignIn}from './pages/SignIn'\nimport {Start} from './components/layout/Start'\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport './css/Custom.css'\nimport AuthContext from './context/AuthContext';\n\nfunction App() {\n  const [isAuthentication, setIsAuthentication] = useState(false)\n  const [data, setData] = useState([])\n\n  const token = JSON.parse(localStorage.getItem('UserInfo')).token\n\n  const updateData = (value) => {\n    setData([...data, value])\n  }\n\n  const updateIsAuthentication = (isAuth) => {\n    setIsAuthentication(isAuth)\n  }\n\n  useEffect(()=> {\n    if (localStorage.getItem('UserInfo')) {\n        setIsAuthentication(true)\n    }\n    const res = fetch(\n      'http://localhost:8000/api/employees/',\n        {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept' : 'application/json',\n                'Authorization' : `Token ${token}`\n            }\n        }\n    )\n    .then(response => {return response.json()})\n    .then(fetchedData => {setData(fetchedData)})\n\n  }, [data])\n\n\n  return (\n    <AuthContext.Provider value={isAuthentication}> \n      <Router>\n        <AlertState>\n        \n          <Switch>\n            <Route path=\"/\" exact>\n              { isAuthentication ?\n              <> \n                <Header updateIsAuthentication={updateIsAuthentication}/>\n                <Alert/>\n                <Form updateData={updateData}/>\n                <Employees data={data}/>\n              </> :\n              <>\n                <Start/>\n              </>\n              }\n            </Route>\n            <Route path=\"/signup\" exact>\n              <Header updateIsAuthentication={updateIsAuthentication}/>\n              <Alert/>\n              <SignUp/>\n            </Route>\n            <Route path=\"/login\" exact>\n              <Header updateIsAuthentication={updateIsAuthentication}/>\n              <Alert/>\n              <SignIn updateIsAuthentication={updateIsAuthentication} />\n            </Route>\n          </Switch>\n        </AlertState>\n      </Router>\n    </AuthContext.Provider> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}